% TREVOR ROSS, ANDREW BUELTER
% FINAL PROJECT
% CS 5402 - Machine Learning

clear; clc;
load('adult_data.mat')

% TRAINING DATA
X = Xtrain;
Y = Ytrain;
N = size(X, 2); % number of samples
D = size(X, 1) - 1; % feature dimensions

%find the positive and negative data
posIdx = find(Y==1);
negIdx = find(Y==-1);

%get the minimum and maximum of the data
maxX1 = max(X(2,:)); 
minX1 = min(X(2,:));

maxX2 = max(X(3,:)); 
minX2 = min(X(3,:));

T = 1; % maximum iterations
w = zeros(D+1,1); % w is a 3* 1 vector, initialized as 0

% Pocket PLA initialization
pocket_w = w;
pocket_err = 0;
for nE = 1:N
    pocket_err = pocket_err + (sign(w' * X(:,nE)) ~= Y(nE));
end

for t = 1:T 
    error = 0;
    for n=1:N
        %find a misktake of w and correct it
        if (Y(n) * X(:,n)' * w <= 0)  
           w = w + Y(n) * X(:,n);
           error = error + 1;
           curr_err = 0;
           for nE = 1:N
               curr_err = curr_err + (sign(w' * X(:,nE)) ~= Y(nE));
           end
           
           % update pocket PLA if nessissary
           if (curr_err < pocket_err)
               pocket_w = w;
               pocket_err = curr_err;
           end
        end             
    end       
    
    %if there are no more mistakes
    if error ==0
        break;
    end
end

disp(['PLA error rate: ', num2str(error/N)])
disp(['Pocket PLA error rate: ', num2str(pocket_err/N)])

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% TEST DATA
w = [400;-15;170;333;-1967;-204;-606;-186;128;98694;941;-14];
% TRAINING DATA
X = Xtest;
Y = Ytest;
N = size(X, 2); % number of samples
D = size(X, 1) - 1; % feature dimensions

%find the positive and negative data
posIdx = find(Y==1);
negIdx = find(Y==-1);

%get the minimum and maximum of the data
maxX1 = max(X(2,:)); 
minX1 = min(X(2,:));
maxX2 = max(X(3,:)); 
minX2 = min(X(3,:));

T = 1; % maximum iterations

% Pocket PLA initialization
pocket_w = w;
pocket_err = 0;
for nE = 1:N
    pocket_err = pocket_err + (sign(w' * X(:,nE)) ~= Y(nE));
end

for t = 1:T 
    error = 0;
    for n=1:N
        %find a misktake of w and correct it
        if (Y(n) * X(:,n)' * w <= 0)  
           error = error + 1;
           curr_err = 0;
           for nE = 1:N
               curr_err = curr_err + (sign(w' * X(:,nE)) ~= Y(nE));
           end
           
           % update pocket PLA if nessissary
           if (curr_err < pocket_err)
               pocket_w = w;
               pocket_err = curr_err;
           end
        end             
    end       
    
    %if there are no more mistakes
    if error ==0
        break;
    end
end

disp(['PLA error rate: ', num2str(error/N)])
disp(['Pocket PLA error rate: ', num2str(pocket_err/N)])